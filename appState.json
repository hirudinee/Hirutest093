{"EDITOR_STATE":{"allProjectFiles":{"48711a28-0a52-47bc-a40a-52ded5871fd6":{"id":"48711a28-0a52-47bc-a40a-52ded5871fd6","parent":null,"name":"Hirutest093","type":"DIRECTORY","isDirectory":true,"children":["002d761d-2a2d-4831-af5d-ddb4334ddf33","0a4e1cf0-bb9a-4bd8-b22a-a4ef632cde12"],"isRemovable":false,"filePath":"Hirutest093"},"002d761d-2a2d-4831-af5d-ddb4334ddf33":{"id":"002d761d-2a2d-4831-af5d-ddb4334ddf33","parent":"48711a28-0a52-47bc-a40a-52ded5871fd6","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hirutest093/lambda.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\n\ts3.getBucketLocation({\n\t\t'Bucket': \"test.sample.ohio\"\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tconsole.log('Get bucket location was success');           // successful response\n\t\t\t/*\n\t\t\tdata = {\n\t\t\t\tLocationConstraint: \"us-west-2\"\n\t\t\t}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('an error occured');\n\t\t\tconsole.log(err, err.stack);\n\t\t\t // an error occurred\n\t\t});\n\n\ts3.deleteObject({\n\t\t'Bucket': \"test.sample.ohio\",\n\t\t'Key': \"sample\"\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log('Delete object was successfull');\n\t\t\tconsole.log(data); \n\t\t\t          // successful response\n\t\t\t/*\n\t\t\t\tdata = {}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('An error occured');\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\n\t//callback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast2Hirutesttestany","config":{}}],"version":3},"0a4e1cf0-bb9a-4bd8-b22a-a4ef632cde12":{"id":"0a4e1cf0-bb9a-4bd8-b22a-a4ef632cde12","parent":"48711a28-0a52-47bc-a40a-52ded5871fd6","name":"s3get.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hirutest093/s3get.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\ts3.getObject({\n\t\t'Bucket': \"test.sample.ohio\",\n\t\t'Key': \"001.png\"\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\t/*\n\t\t\tdata = {\n\t\t\t\tAcceptRanges: \"bytes\", \n\t\t\t\tContentLength: 3191, \n\t\t\t\tContentType: \"image/jpeg\", \n\t\t\t\tETag: \"\\\\\"6805f2cfc46c0f04559748bb039d69ae\\\\\"\", \n\t\t\t\tLastModified: <Date Representation>, \n\t\t\t\tMetadata: {...}, \n\t\t\t\tTagCount: 2, \n\t\t\t\tVersionId: \"null\"\n\t\t\t}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[],"version":1}},"rootNode":"48711a28-0a52-47bc-a40a-52ded5871fd6","openFiles":["002d761d-2a2d-4831-af5d-ddb4334ddf33","0a4e1cf0-bb9a-4bd8-b22a-a4ef632cde12"],"currentFileId":"0a4e1cf0-bb9a-4bd8-b22a-a4ef632cde12","resources":{"apigusEast2Hirutesttestany":{"name":"apigusEast2Hirutesttestany","type":"API_GATEWAY","config":{"selectedRegion":"us-east-2","apiMode":0,"apiName":"Hiru_test","endpointType":"EDGE","resourceMode":0,"resourceName":"test","resourcePath":"/test","restMethod":"ANY","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"test"},"globallyEditable":true},"s3testsampleohio":{"name":"s3testsampleohio","type":"S3","config":{"mode":1,"bucket":{"region":"us-east-2","name":"test.sample.ohio"}},"globallyEditable":false}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"}}},"lambdaId":"002d761d-2a2d-4831-af5d-ddb4334ddf33","additionalFiles":[]},"PROJECT_META":{"projectName":"Hirutest093","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-2","repoName":"Hirutest093","repoUrl":"https://github.com/hirudinee/Hirutest093","lastSave":1520836282282}}